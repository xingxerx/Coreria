{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":276,"byte_end":301,"line_start":10,"line_end":10,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":272,"byte_end":303,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Any` and `TypeId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/scene.rs","byte_start":236,"byte_end":239,"line_start":7,"line_end":7,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":241,"byte_end":247,"line_start":7,"line_end":7,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":221,"byte_end":250,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Any` and `TypeId`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:7:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::any::{Any, TypeId};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/game_objects.rs","byte_start":4721,"byte_end":4747,"line_start":180,"line_end":180,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"impl GameObject for Player {","highlight_start":1,"highlight_end":27}],"label":"missing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":685,"byte_end":716,"line_start":20,"line_end":20,"column_start":5,"column_end":36,"is_primary":false,"text":[{"text":"    fn get_size(&self) -> Vector3D;","highlight_start":5,"highlight_end":36}],"label":"`get_size` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":721,"byte_end":747,"line_start":21,"line_end":21,"column_start":5,"column_end":31,"is_primary":false,"text":[{"text":"    fn get_id(&self) -> usize;","highlight_start":5,"highlight_end":31}],"label":"`get_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":752,"byte_end":784,"line_start":22,"line_end":22,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    fn set_id(&mut self, id: usize);","highlight_start":5,"highlight_end":37}],"label":"`set_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":789,"byte_end":828,"line_start":23,"line_end":23,"column_start":5,"column_end":44,"is_primary":false,"text":[{"text":"    fn as_any(&self) -> &dyn std::any::Any;","highlight_start":5,"highlight_end":44}],"label":"`as_any` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":833,"byte_end":884,"line_start":24,"line_end":24,"column_start":5,"column_end":56,"is_primary":false,"text":[{"text":"    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;","highlight_start":5,"highlight_end":56}],"label":"`as_any_mut` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn get_size(&self) -> Vector3D { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":6132,"byte_end":6132,"line_start":219,"line_end":219,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_size(&self) -> Vector3D { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_id(&self) -> usize { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":6132,"byte_end":6132,"line_start":219,"line_end":219,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_id(&self) -> usize { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn set_id(&mut self, _: usize) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":6132,"byte_end":6132,"line_start":219,"line_end":219,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn set_id(&mut self, _: usize) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any(&self) -> &(dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":6132,"byte_end":6132,"line_start":219,"line_end":219,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any(&self) -> &(dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":6132,"byte_end":6132,"line_start":219,"line_end":219,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:180:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_size(&self) -> Vector3D;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_size` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_id(&self) -> usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn set_id(&mut self, id: usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`set_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any(&self) -> &dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any_mut` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl GameObject for Player {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/game_objects.rs","byte_start":8556,"byte_end":8587,"line_start":316,"line_end":316,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"impl GameObject for Collectible {","highlight_start":1,"highlight_end":32}],"label":"missing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":685,"byte_end":716,"line_start":20,"line_end":20,"column_start":5,"column_end":36,"is_primary":false,"text":[{"text":"    fn get_size(&self) -> Vector3D;","highlight_start":5,"highlight_end":36}],"label":"`get_size` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":721,"byte_end":747,"line_start":21,"line_end":21,"column_start":5,"column_end":31,"is_primary":false,"text":[{"text":"    fn get_id(&self) -> usize;","highlight_start":5,"highlight_end":31}],"label":"`get_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":752,"byte_end":784,"line_start":22,"line_end":22,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    fn set_id(&mut self, id: usize);","highlight_start":5,"highlight_end":37}],"label":"`set_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":789,"byte_end":828,"line_start":23,"line_end":23,"column_start":5,"column_end":44,"is_primary":false,"text":[{"text":"    fn as_any(&self) -> &dyn std::any::Any;","highlight_start":5,"highlight_end":44}],"label":"`as_any` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":833,"byte_end":884,"line_start":24,"line_end":24,"column_start":5,"column_end":56,"is_primary":false,"text":[{"text":"    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;","highlight_start":5,"highlight_end":56}],"label":"`as_any_mut` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn get_size(&self) -> Vector3D { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":10180,"byte_end":10180,"line_start":359,"line_end":359,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_size(&self) -> Vector3D { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_id(&self) -> usize { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":10180,"byte_end":10180,"line_start":359,"line_end":359,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_id(&self) -> usize { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn set_id(&mut self, _: usize) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":10180,"byte_end":10180,"line_start":359,"line_end":359,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn set_id(&mut self, _: usize) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any(&self) -> &(dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":10180,"byte_end":10180,"line_start":359,"line_end":359,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any(&self) -> &(dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":10180,"byte_end":10180,"line_start":359,"line_end":359,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:316:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_size(&self) -> Vector3D;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_size` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_id(&self) -> usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn set_id(&mut self, id: usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`set_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any(&self) -> &dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any_mut` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl GameObject for Collectible {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/game_objects.rs","byte_start":15683,"byte_end":15708,"line_start":547,"line_end":547,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"impl GameObject for Enemy {","highlight_start":1,"highlight_end":26}],"label":"missing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":685,"byte_end":716,"line_start":20,"line_end":20,"column_start":5,"column_end":36,"is_primary":false,"text":[{"text":"    fn get_size(&self) -> Vector3D;","highlight_start":5,"highlight_end":36}],"label":"`get_size` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":721,"byte_end":747,"line_start":21,"line_end":21,"column_start":5,"column_end":31,"is_primary":false,"text":[{"text":"    fn get_id(&self) -> usize;","highlight_start":5,"highlight_end":31}],"label":"`get_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":752,"byte_end":784,"line_start":22,"line_end":22,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    fn set_id(&mut self, id: usize);","highlight_start":5,"highlight_end":37}],"label":"`set_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":789,"byte_end":828,"line_start":23,"line_end":23,"column_start":5,"column_end":44,"is_primary":false,"text":[{"text":"    fn as_any(&self) -> &dyn std::any::Any;","highlight_start":5,"highlight_end":44}],"label":"`as_any` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":833,"byte_end":884,"line_start":24,"line_end":24,"column_start":5,"column_end":56,"is_primary":false,"text":[{"text":"    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;","highlight_start":5,"highlight_end":56}],"label":"`as_any_mut` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn get_size(&self) -> Vector3D { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":16769,"byte_end":16769,"line_start":576,"line_end":576,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_size(&self) -> Vector3D { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_id(&self) -> usize { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":16769,"byte_end":16769,"line_start":576,"line_end":576,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_id(&self) -> usize { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn set_id(&mut self, _: usize) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":16769,"byte_end":16769,"line_start":576,"line_end":576,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn set_id(&mut self, _: usize) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any(&self) -> &(dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":16769,"byte_end":16769,"line_start":576,"line_end":576,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any(&self) -> &(dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":16769,"byte_end":16769,"line_start":576,"line_end":576,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:547:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_size(&self) -> Vector3D;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_size` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_id(&self) -> usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn set_id(&mut self, id: usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`set_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any(&self) -> &dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any_mut` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m547\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl GameObject for Enemy {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/game_objects.rs","byte_start":17903,"byte_end":17931,"line_start":628,"line_end":628,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"impl GameObject for Platform {","highlight_start":1,"highlight_end":29}],"label":"missing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":685,"byte_end":716,"line_start":20,"line_end":20,"column_start":5,"column_end":36,"is_primary":false,"text":[{"text":"    fn get_size(&self) -> Vector3D;","highlight_start":5,"highlight_end":36}],"label":"`get_size` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":721,"byte_end":747,"line_start":21,"line_end":21,"column_start":5,"column_end":31,"is_primary":false,"text":[{"text":"    fn get_id(&self) -> usize;","highlight_start":5,"highlight_end":31}],"label":"`get_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":752,"byte_end":784,"line_start":22,"line_end":22,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    fn set_id(&mut self, id: usize);","highlight_start":5,"highlight_end":37}],"label":"`set_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":789,"byte_end":828,"line_start":23,"line_end":23,"column_start":5,"column_end":44,"is_primary":false,"text":[{"text":"    fn as_any(&self) -> &dyn std::any::Any;","highlight_start":5,"highlight_end":44}],"label":"`as_any` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":833,"byte_end":884,"line_start":24,"line_end":24,"column_start":5,"column_end":56,"is_primary":false,"text":[{"text":"    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;","highlight_start":5,"highlight_end":56}],"label":"`as_any_mut` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn get_size(&self) -> Vector3D { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":18811,"byte_end":18811,"line_start":651,"line_end":651,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_size(&self) -> Vector3D { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_id(&self) -> usize { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":18811,"byte_end":18811,"line_start":651,"line_end":651,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_id(&self) -> usize { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn set_id(&mut self, _: usize) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":18811,"byte_end":18811,"line_start":651,"line_end":651,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn set_id(&mut self, _: usize) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any(&self) -> &(dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":18811,"byte_end":18811,"line_start":651,"line_end":651,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any(&self) -> &(dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }`","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":18811,"byte_end":18811,"line_start":651,"line_end":651,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn as_any_mut(&mut self) -> &mut (dyn Any + 'static) { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:628:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_size(&self) -> Vector3D;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_size` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_id(&self) -> usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn set_id(&mut self, id: usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`set_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any(&self) -> &dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn as_any_mut(&mut self) -> &mut dyn std::any::Any;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`as_any_mut` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m628\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl GameObject for Platform {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `get_size`, `get_id`, `set_id`, `as_any`, `as_any_mut` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `0` on type `Matrix<u32, Const<2>, Const<1>, ArrayStorage<u32, 2, 1>>`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/rendering.rs","byte_start":3882,"byte_end":3883,"line_start":129,"line_end":129,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"        (size.0 as u32, size.1 as u32)","highlight_start":15,"highlight_end":16}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"one of the expressions' fields has a field of the same name","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":3882,"byte_end":3882,"line_start":129,"line_end":129,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        (size.0 as u32, size.1 as u32)","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":"data.","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":3882,"byte_end":3883,"line_start":129,"line_end":129,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"        (size.0 as u32, size.1 as u32)","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `0` on type `Matrix<u32, Const<2>, Const<1>, ArrayStorage<u32, 2, 1>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:129:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (size.0 as u32, size.1 as u32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: one of the expressions' fields has a field of the same name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        (size.\u001b[0m\u001b[0m\u001b[38;5;10mdata.\u001b[0m\u001b[0m0 as u32, size.1 as u32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a field with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        (size.\u001b[0m\u001b[0m\u001b[38;5;9m0\u001b[0m\u001b[0m as u32, size.1 as u32)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        (size.\u001b[0m\u001b[0m\u001b[38;5;10mx\u001b[0m\u001b[0m as u32, size.1 as u32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `1` on type `Matrix<u32, Const<2>, Const<1>, ArrayStorage<u32, 2, 1>>`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/rendering.rs","byte_start":3897,"byte_end":3898,"line_start":129,"line_end":129,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"        (size.0 as u32, size.1 as u32)","highlight_start":30,"highlight_end":31}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available field is: `data`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":3897,"byte_end":3898,"line_start":129,"line_end":129,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"        (size.0 as u32, size.1 as u32)","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `1` on type `Matrix<u32, Const<2>, Const<1>, ArrayStorage<u32, 2, 1>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:129:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (size.0 as u32, size.1 as u32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available field is: `data`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a field with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        (size.0 as u32, size.\u001b[0m\u001b[0m\u001b[38;5;9m1\u001b[0m\u001b[0m as u32)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        (size.0 as u32, size.\u001b[0m\u001b[0m\u001b[38;5;10mx\u001b[0m\u001b[0m as u32)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `eye` found for reference `&ArcBall` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/rendering.rs","byte_start":6256,"byte_end":6259,"line_start":192,"line_end":192,"column_start":38,"column_end":41,"is_primary":true,"text":[{"text":"                    let eye = camera.eye();","highlight_start":38,"highlight_end":41}],"label":"method not found in `&ArcBall`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `Camera` which provides `eye` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":56,"byte_end":56,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::math::Vector3D;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use kiss3d::camera::Camera;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `eye` found for reference `&ArcBall` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:192:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let eye = camera.eye();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&ArcBall`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: trait `Camera` which provides `eye` is implemented but not in scope; perhaps you want to import it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use kiss3d::camera::Camera;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `eye` found for reference `&FirstPerson` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/rendering.rs","byte_start":6551,"byte_end":6554,"line_start":200,"line_end":200,"column_start":38,"column_end":41,"is_primary":true,"text":[{"text":"                    let eye = camera.eye();","highlight_start":38,"highlight_end":41}],"label":"private field, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `Camera` which provides `eye` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":56,"byte_end":56,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::math::Vector3D;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use kiss3d::camera::Camera;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `eye` found for reference `&FirstPerson` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:200:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let eye = camera.eye();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate field, not a method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: trait `Camera` which provides `eye` is implemented but not in scope; perhaps you want to import it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use kiss3d::camera::Camera;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this pattern has 2 fields, but the corresponding tuple variant has 3 fields","code":{"code":"E0023","explanation":"A pattern attempted to extract an incorrect number of fields from a variant.\n\nErroneous code example:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\nmatch x {\n    Fruit::Apple(a) => {}, // error!\n    _ => {}\n}\n```\n\nA pattern used to match against an enum variant must provide a sub-pattern for\neach field of the enum variant.\n\nHere the `Apple` variant has two fields, and should be matched against like so:\n\n```\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Correct.\nmatch x {\n    Fruit::Apple(a, b) => {},\n    _ => {}\n}\n```\n\nMatching with the wrong number of fields has no sensible interpretation:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Incorrect.\nmatch x {\n    Fruit::Apple(a) => {},\n    Fruit::Apple(a, b, c) => {},\n}\n```\n\nCheck how many fields the enum was declared with and ensure that your pattern\nuses the same number.\n"},"level":"error","spans":[{"file_name":"src/input.rs","byte_start":6306,"byte_end":6307,"line_start":172,"line_end":172,"column_start":58,"column_end":59,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::CursorPos(x, y) => {","highlight_start":58,"highlight_end":59}],"label":"expected 3 fields, found 2","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":330,"byte_end":333,"line_start":13,"line_end":13,"column_start":15,"column_end":18,"is_primary":false,"text":[{"text":"    CursorPos(f64, f64, Modifiers),","highlight_start":15,"highlight_end":18}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":335,"byte_end":338,"line_start":13,"line_end":13,"column_start":20,"column_end":23,"is_primary":false,"text":[{"text":"    CursorPos(f64, f64, Modifiers),","highlight_start":20,"highlight_end":23}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":340,"byte_end":349,"line_start":13,"line_end":13,"column_start":25,"column_end":34,"is_primary":false,"text":[{"text":"    CursorPos(f64, f64, Modifiers),","highlight_start":25,"highlight_end":34}],"label":"tuple variant has 3 fields","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/input.rs","byte_start":6303,"byte_end":6304,"line_start":172,"line_end":172,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::CursorPos(x, y) => {","highlight_start":55,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `_` to explicitly ignore each field","code":null,"level":"help","spans":[{"file_name":"src/input.rs","byte_start":6307,"byte_end":6307,"line_start":172,"line_end":172,"column_start":59,"column_end":59,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::CursorPos(x, y) => {","highlight_start":59,"highlight_end":59}],"label":null,"suggested_replacement":", _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0023]\u001b[0m\u001b[0m\u001b[1m: this pattern has 2 fields, but the corresponding tuple variant has 3 fields\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/input.rs:172:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                kiss3d::event::WindowEvent::CursorPos(x, y) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 3 fields, found 2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs:13:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CursorPos(f64, f64, Modifiers),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtuple variant has 3 fields\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `_` to explicitly ignore each field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                kiss3d::event::WindowEvent::CursorPos(x, y\u001b[0m\u001b[0m\u001b[38;5;10m, _\u001b[0m\u001b[0m) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this pattern has 2 fields, but the corresponding tuple variant has 3 fields","code":{"code":"E0023","explanation":"A pattern attempted to extract an incorrect number of fields from a variant.\n\nErroneous code example:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\nmatch x {\n    Fruit::Apple(a) => {}, // error!\n    _ => {}\n}\n```\n\nA pattern used to match against an enum variant must provide a sub-pattern for\neach field of the enum variant.\n\nHere the `Apple` variant has two fields, and should be matched against like so:\n\n```\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Correct.\nmatch x {\n    Fruit::Apple(a, b) => {},\n    _ => {}\n}\n```\n\nMatching with the wrong number of fields has no sensible interpretation:\n\n```compile_fail,E0023\nenum Fruit {\n    Apple(String, String),\n    Pear(u32),\n}\n\nlet x = Fruit::Apple(String::new(), String::new());\n\n// Incorrect.\nmatch x {\n    Fruit::Apple(a) => {},\n    Fruit::Apple(a, b, c) => {},\n}\n```\n\nCheck how many fields the enum was declared with and ensure that your pattern\nuses the same number.\n"},"level":"error","spans":[{"file_name":"src/input.rs","byte_start":6791,"byte_end":6792,"line_start":181,"line_end":181,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::Scroll(_, y) => {","highlight_start":55,"highlight_end":56}],"label":"expected 3 fields, found 2","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":388,"byte_end":391,"line_start":15,"line_end":15,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"    Scroll(f64, f64, Modifiers),","highlight_start":12,"highlight_end":15}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":393,"byte_end":396,"line_start":15,"line_end":15,"column_start":17,"column_end":20,"is_primary":false,"text":[{"text":"    Scroll(f64, f64, Modifiers),","highlight_start":17,"highlight_end":20}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs","byte_start":398,"byte_end":407,"line_start":15,"line_end":15,"column_start":22,"column_end":31,"is_primary":false,"text":[{"text":"    Scroll(f64, f64, Modifiers),","highlight_start":22,"highlight_end":31}],"label":"tuple variant has 3 fields","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/input.rs","byte_start":6788,"byte_end":6789,"line_start":181,"line_end":181,"column_start":52,"column_end":53,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::Scroll(_, y) => {","highlight_start":52,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `_` to explicitly ignore each field","code":null,"level":"help","spans":[{"file_name":"src/input.rs","byte_start":6792,"byte_end":6792,"line_start":181,"line_end":181,"column_start":56,"column_end":56,"is_primary":true,"text":[{"text":"                kiss3d::event::WindowEvent::Scroll(_, y) => {","highlight_start":56,"highlight_end":56}],"label":null,"suggested_replacement":", _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0023]\u001b[0m\u001b[0m\u001b[1m: this pattern has 2 fields, but the corresponding tuple variant has 3 fields\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/input.rs:181:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                kiss3d::event::WindowEvent::Scroll(_, y) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 3 fields, found 2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kiss3d-0.35.0/src/event/window_event.rs:15:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Scroll(f64, f64, Modifiers),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtuple variant has 3 fields\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `_` to explicitly ignore each field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                kiss3d::event::WindowEvent::Scroll(_, y\u001b[0m\u001b[0m\u001b[38;5;10m, _\u001b[0m\u001b[0m) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Repeat` found for enum `Action` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/input.rs","byte_start":4126,"byte_end":4132,"line_start":132,"line_end":132,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"                        kiss3d::event::Action::Repeat => {","highlight_start":48,"highlight_end":54}],"label":"variant or associated item not found in `Action`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `Repeat` found for enum `Action` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/input.rs:132:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        kiss3d::event::Action::Repeat => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Action`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Enter` found for enum `kiss3d::event::Key` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/input.rs","byte_start":14343,"byte_end":14348,"line_start":397,"line_end":397,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"            kiss3d::event::Key::Enter => Key::Enter,","highlight_start":33,"highlight_end":38}],"label":"variant or associated item not found in `Key`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `Enter` found for enum `kiss3d::event::Key` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/input.rs:397:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            kiss3d::event::Key::Enter => Key::Enter,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Key`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `Backspace` found for enum `kiss3d::event::Key` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/input.rs","byte_start":14500,"byte_end":14509,"line_start":400,"line_end":400,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"            kiss3d::event::Key::Backspace => Key::Backspace,","highlight_start":33,"highlight_end":42}],"label":"variant or associated item not found in `Key`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/input.rs","byte_start":14500,"byte_end":14509,"line_start":400,"line_end":400,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"            kiss3d::event::Key::Backspace => Key::Backspace,","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":"Backslash","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `Backspace` found for enum `kiss3d::event::Key` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/input.rs:400:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            kiss3d::event::Key::Backspace => Key::Backspace,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Key`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            kiss3d::event::Key::\u001b[0m\u001b[0m\u001b[38;5;9mBackspace\u001b[0m\u001b[0m => Key::Backspace,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            kiss3d::event::Key::\u001b[0m\u001b[0m\u001b[38;5;10mBackslash\u001b[0m\u001b[0m => Key::Backspace,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/physics.rs","byte_start":10547,"byte_end":10554,"line_start":300,"line_end":300,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"        let t1 = (bounds.min - origin) * inv_dir;","highlight_start":42,"highlight_end":49}],"label":"expected `f32`, found `Vector3D`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:300:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let t1 = (bounds.min - origin) * inv_dir;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `f32`, found `Vector3D`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/physics.rs","byte_start":10597,"byte_end":10604,"line_start":301,"line_end":301,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"        let t2 = (bounds.max - origin) * inv_dir;","highlight_start":42,"highlight_end":49}],"label":"expected `f32`, found `Vector3D`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:301:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let t2 = (bounds.max - origin) * inv_dir;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `f32`, found `Vector3D`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/scene.rs","byte_start":4618,"byte_end":4626,"line_start":148,"line_end":148,"column_start":43,"column_end":51,"is_primary":false,"text":[{"text":"        let player = Box::new(Player::new(position));","highlight_start":43,"highlight_end":51}],"label":"argument #1 of type `String` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":4606,"byte_end":4617,"line_start":148,"line_end":148,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"        let player = Box::new(Player::new(position));","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/game_objects.rs","byte_start":2359,"byte_end":2371,"line_start":85,"line_end":85,"column_start":16,"column_end":28,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D) -> Self {","highlight_start":16,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":2355,"byte_end":2358,"line_start":85,"line_end":85,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(name: String, position: Vector3D) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":4617,"byte_end":4627,"line_start":148,"line_end":148,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"        let player = Box::new(Player::new(position));","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":"(/* String */, position)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:148:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let player = Box::new(Player::new(position));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `String` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:85:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(name: String, position: Vector3D) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let player = Box::new(Player::new(\u001b[0m\u001b[0m\u001b[38;5;10m/* String */, \u001b[0m\u001b[0mposition));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 4 arguments but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/scene.rs","byte_start":4802,"byte_end":4810,"line_start":153,"line_end":153,"column_start":53,"column_end":61,"is_primary":false,"text":[{"text":"        let collectible = Box::new(Collectible::new(position, value));","highlight_start":53,"highlight_end":61}],"label":"argument #1 of type `String` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":4801,"byte_end":4818,"line_start":153,"line_end":153,"column_start":52,"column_end":69,"is_primary":false,"text":[{"text":"        let collectible = Box::new(Collectible::new(position, value));","highlight_start":52,"highlight_end":69}],"label":"argument #4 of type `CollectibleType` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":4785,"byte_end":4801,"line_start":153,"line_end":153,"column_start":36,"column_end":52,"is_primary":true,"text":[{"text":"        let collectible = Box::new(Collectible::new(position, value));","highlight_start":36,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/game_objects.rs","byte_start":6658,"byte_end":6670,"line_start":247,"line_end":247,"column_start":16,"column_end":28,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D, value: i32, collectible_type: CollectibleType) -> Self {","highlight_start":16,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":6704,"byte_end":6737,"line_start":247,"line_end":247,"column_start":62,"column_end":95,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D, value: i32, collectible_type: CollectibleType) -> Self {","highlight_start":62,"highlight_end":95}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":6654,"byte_end":6657,"line_start":247,"line_end":247,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(name: String, position: Vector3D, value: i32, collectible_type: CollectibleType) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the arguments","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":4801,"byte_end":4818,"line_start":153,"line_end":153,"column_start":52,"column_end":69,"is_primary":true,"text":[{"text":"        let collectible = Box::new(Collectible::new(position, value));","highlight_start":52,"highlight_end":69}],"label":null,"suggested_replacement":"(/* String */, position, value, /* CollectibleType */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 2 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:153:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let collectible = Box::new(Collectible::new(position, value));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m||\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `String` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #4 of type `CollectibleType` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:247:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(name: String, position: Vector3D, value: i32, collectible_type: CollectibleType) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let collectible = Box::new(Collectible::new\u001b[0m\u001b[0m\u001b[38;5;9m(position, value)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let collectible = Box::new(Collectible::new\u001b[0m\u001b[0m\u001b[38;5;10m(/* String */, position, value, /* CollectibleType */)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/scene.rs","byte_start":4991,"byte_end":4997,"line_start":158,"line_end":158,"column_start":51,"column_end":57,"is_primary":false,"text":[{"text":"        let enemy = Box::new(Enemy::new(position, health));","highlight_start":51,"highlight_end":57}],"label":"unexpected argument #2 of type `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":4981,"byte_end":4989,"line_start":158,"line_end":158,"column_start":41,"column_end":49,"is_primary":false,"text":[{"text":"        let enemy = Box::new(Enemy::new(position, health));","highlight_start":41,"highlight_end":49}],"label":"argument #1 of type `String` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":4970,"byte_end":4980,"line_start":158,"line_end":158,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"        let enemy = Box::new(Enemy::new(position, health));","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/game_objects.rs","byte_start":10840,"byte_end":10852,"line_start":393,"line_end":393,"column_start":16,"column_end":28,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D) -> Self {","highlight_start":16,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":10836,"byte_end":10839,"line_start":393,"line_end":393,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(name: String, position: Vector3D) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"did you mean","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":4980,"byte_end":4998,"line_start":158,"line_end":158,"column_start":40,"column_end":58,"is_primary":true,"text":[{"text":"        let enemy = Box::new(Enemy::new(position, health));","highlight_start":40,"highlight_end":58}],"label":null,"suggested_replacement":"(/* String */, position)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:158:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let enemy = Box::new(Enemy::new(position, health));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected argument #2 of type `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `String` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:393:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(name: String, position: Vector3D) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: did you mean\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let enemy = Box::new(Enemy::new\u001b[0m\u001b[0m\u001b[38;5;9m(position, health)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let enemy = Box::new(Enemy::new\u001b[0m\u001b[0m\u001b[38;5;10m(/* String */, position)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 4 arguments but 2 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/scene.rs","byte_start":5167,"byte_end":5175,"line_start":163,"line_end":163,"column_start":47,"column_end":55,"is_primary":false,"text":[{"text":"        let platform = Box::new(Platform::new(position, size));","highlight_start":47,"highlight_end":55}],"label":"argument #1 of type `String` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":5166,"byte_end":5182,"line_start":163,"line_end":163,"column_start":46,"column_end":62,"is_primary":false,"text":[{"text":"        let platform = Box::new(Platform::new(position, size));","highlight_start":46,"highlight_end":62}],"label":"argument #4 of type `PlatformType` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":5153,"byte_end":5166,"line_start":163,"line_end":163,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"        let platform = Box::new(Platform::new(position, size));","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/game_objects.rs","byte_start":17143,"byte_end":17155,"line_start":597,"line_end":597,"column_start":16,"column_end":28,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D, size: Vector3D, platform_type: PlatformType) -> Self {","highlight_start":16,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":17193,"byte_end":17220,"line_start":597,"line_end":597,"column_start":66,"column_end":93,"is_primary":false,"text":[{"text":"    pub fn new(name: String, position: Vector3D, size: Vector3D, platform_type: PlatformType) -> Self {","highlight_start":66,"highlight_end":93}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_objects.rs","byte_start":17139,"byte_end":17142,"line_start":597,"line_end":597,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(name: String, position: Vector3D, size: Vector3D, platform_type: PlatformType) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the arguments","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":5166,"byte_end":5182,"line_start":163,"line_end":163,"column_start":46,"column_end":62,"is_primary":true,"text":[{"text":"        let platform = Box::new(Platform::new(position, size));","highlight_start":46,"highlight_end":62}],"label":null,"suggested_replacement":"(/* String */, size, position, /* PlatformType */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 4 arguments but 2 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:163:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let platform = Box::new(Platform::new(position, size));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m||\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `String` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #4 of type `PlatformType` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:597:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(name: String, position: Vector3D, size: Vector3D, platform_type: PlatformType) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let platform = Box::new(Platform::new\u001b[0m\u001b[0m\u001b[38;5;9m(position, size)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let platform = Box::new(Platform::new\u001b[0m\u001b[0m\u001b[38;5;10m(/* String */, size, position, /* PlatformType */)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1792,"byte_end":1794,"line_start":70,"line_end":70,"column_start":31,"column_end":33,"is_primary":false,"text":[{"text":"        let scene = Scene::new();","highlight_start":31,"highlight_end":33}],"label":"argument #1 of type `&str` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":1782,"byte_end":1792,"line_start":70,"line_end":70,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let scene = Scene::new();","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/scene.rs","byte_start":570,"byte_end":580,"line_start":22,"line_end":22,"column_start":16,"column_end":26,"is_primary":false,"text":[{"text":"    pub fn new(name: &str) -> Self {","highlight_start":16,"highlight_end":26}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":566,"byte_end":569,"line_start":22,"line_end":22,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(name: &str) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1792,"byte_end":1794,"line_start":70,"line_end":70,"column_start":31,"column_end":33,"is_primary":true,"text":[{"text":"        let scene = Scene::new();","highlight_start":31,"highlight_end":33}],"label":null,"suggested_replacement":"(/* &str */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:70:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let scene = Scene::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&str` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(name: &str) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let scene = Scene::new(\u001b[0m\u001b[0m\u001b[38;5;10m/* &str */\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `GameObject`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/physics.rs","byte_start":105,"byte_end":115,"line_start":4,"line_end":4,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"use crate::game_objects::{GameObject, BoundingBox};","highlight_start":27,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `GameObject`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:4:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::game_objects::{GameObject, BoundingBox};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `delta_time`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/game_objects.rs","byte_start":3556,"byte_end":3566,"line_start":130,"line_end":130,"column_start":51,"column_end":61,"is_primary":true,"text":[{"text":"    pub fn apply_gravity(&mut self, gravity: f32, delta_time: f32) {","highlight_start":51,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":3556,"byte_end":3566,"line_start":130,"line_end":130,"column_start":51,"column_end":61,"is_primary":true,"text":[{"text":"    pub fn apply_gravity(&mut self, gravity: f32, delta_time: f32) {","highlight_start":51,"highlight_end":61}],"label":null,"suggested_replacement":"_delta_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `delta_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:130:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn apply_gravity(&mut self, gravity: f32, delta_time: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_delta_time`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `current_time`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/game_objects.rs","byte_start":12709,"byte_end":12721,"line_start":461,"line_end":461,"column_start":60,"column_end":72,"is_primary":true,"text":[{"text":"    pub fn update_ai(&mut self, player_position: Vector3D, current_time: f32) {","highlight_start":60,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/game_objects.rs","byte_start":12709,"byte_end":12721,"line_start":461,"line_end":461,"column_start":60,"column_end":72,"is_primary":true,"text":[{"text":"    pub fn update_ai(&mut self, player_position: Vector3D, current_time: f32) {","highlight_start":60,"highlight_end":72}],"label":null,"suggested_replacement":"_current_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `current_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_objects.rs:461:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn update_ai(&mut self, player_position: Vector3D, current_time: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_current_time`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `scene`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":1975,"byte_end":1980,"line_start":67,"line_end":67,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn render(&mut self, scene: &Scene) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":1975,"byte_end":1980,"line_start":67,"line_end":67,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn render(&mut self, scene: &Scene) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"_scene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `scene`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:67:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn render(&mut self, scene: &Scene) -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_scene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `title`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":3953,"byte_end":3958,"line_start":132,"line_end":132,"column_start":40,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn set_window_title(&mut self, title: &str) {","highlight_start":40,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":3953,"byte_end":3958,"line_start":132,"line_end":132,"column_start":40,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn set_window_title(&mut self, title: &str) {","highlight_start":40,"highlight_end":45}],"label":null,"suggested_replacement":"_title","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `title`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:132:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_window_title(&mut self, title: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_title`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `camera`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":4759,"byte_end":4765,"line_start":149,"line_end":149,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.arcball_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":4759,"byte_end":4765,"line_start":149,"line_end":149,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.arcball_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"_camera","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `camera`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:149:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(ref mut camera) = self.arcball_camera {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_camera`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `camera`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":4958,"byte_end":4964,"line_start":154,"line_end":154,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.fps_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":4958,"byte_end":4964,"line_start":154,"line_end":154,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.fps_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"_camera","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `camera`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:154:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(ref mut camera) = self.fps_camera {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_camera`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `kiss3d_direction`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5010,"byte_end":5026,"line_start":155,"line_end":155,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                    let kiss3d_direction = Vector3::new(direction.x, direction.y, direction.z);","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5010,"byte_end":5026,"line_start":155,"line_end":155,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                    let kiss3d_direction = Vector3::new(direction.x, direction.y, direction.z);","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":"_kiss3d_direction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `kiss3d_direction`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:155:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let kiss3d_direction = Vector3::new(direction.x, direction.y, direction.z);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_kiss3d_direction`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `amount`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":4572,"byte_end":4578,"line_start":145,"line_end":145,"column_start":56,"column_end":62,"is_primary":true,"text":[{"text":"    pub fn move_camera(&mut self, direction: Vector3D, amount: f32) {","highlight_start":56,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":4572,"byte_end":4578,"line_start":145,"line_end":145,"column_start":56,"column_end":62,"is_primary":true,"text":[{"text":"    pub fn move_camera(&mut self, direction: Vector3D, amount: f32) {","highlight_start":56,"highlight_end":62}],"label":null,"suggested_replacement":"_amount","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:145:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn move_camera(&mut self, direction: Vector3D, amount: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `camera`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5492,"byte_end":5498,"line_start":168,"line_end":168,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.fps_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5492,"byte_end":5498,"line_start":168,"line_end":168,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.fps_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"_camera","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `camera`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:168:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(ref mut camera) = self.fps_camera {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_camera`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `yaw`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5230,"byte_end":5233,"line_start":162,"line_end":162,"column_start":37,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {","highlight_start":37,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5230,"byte_end":5233,"line_start":162,"line_end":162,"column_start":37,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {","highlight_start":37,"highlight_end":40}],"label":null,"suggested_replacement":"_yaw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `yaw`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:162:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_yaw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `pitch`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5240,"byte_end":5245,"line_start":162,"line_end":162,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5240,"byte_end":5245,"line_start":162,"line_end":162,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":"_pitch","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `pitch`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:162:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn rotate_camera(&mut self, yaw: f32, pitch: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_pitch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `camera`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5787,"byte_end":5793,"line_start":178,"line_end":178,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.arcball_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5787,"byte_end":5793,"line_start":178,"line_end":178,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"                if let Some(ref mut camera) = self.arcball_camera {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"_camera","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `camera`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:178:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(ref mut camera) = self.arcball_camera {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_camera`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `amount`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rendering.rs","byte_start":5666,"byte_end":5672,"line_start":175,"line_end":175,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn zoom_camera(&mut self, amount: f32) {","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rendering.rs","byte_start":5666,"byte_end":5672,"line_start":175,"line_end":175,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn zoom_camera(&mut self, amount: f32) {","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":"_amount","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `amount`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rendering.rs:175:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn zoom_camera(&mut self, amount: f32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_amount`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `dt`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/physics.rs","byte_start":2450,"byte_end":2452,"line_start":93,"line_end":93,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"    fn apply_forces(&mut self, dt: f32) {","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/physics.rs","byte_start":2450,"byte_end":2452,"line_start":93,"line_end":93,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"    fn apply_forces(&mut self, dt: f32) {","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":"_dt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:93:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn apply_forces(&mut self, dt: f32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dt`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `body1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/physics.rs","byte_start":6611,"byte_end":6616,"line_start":205,"line_end":205,"column_start":68,"column_end":73,"is_primary":true,"text":[{"text":"    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {","highlight_start":68,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/physics.rs","byte_start":6611,"byte_end":6616,"line_start":205,"line_end":205,"column_start":68,"column_end":73,"is_primary":true,"text":[{"text":"    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {","highlight_start":68,"highlight_end":73}],"label":null,"suggested_replacement":"_body1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `body1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:205:68\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_body1`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `body2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/physics.rs","byte_start":6630,"byte_end":6635,"line_start":205,"line_end":205,"column_start":87,"column_end":92,"is_primary":true,"text":[{"text":"    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {","highlight_start":87,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/physics.rs","byte_start":6630,"byte_end":6635,"line_start":205,"line_end":205,"column_start":87,"column_end":92,"is_primary":true,"text":[{"text":"    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {","highlight_start":87,"highlight_end":92}],"label":null,"suggested_replacement":"_body2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `body2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/physics.rs:205:87\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn handle_trigger_collision(&mut self, id1: usize, id2: usize, body1: &RigidBody, body2: &RigidBody) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_body2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `current`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/audio.rs","byte_start":3895,"byte_end":3902,"line_start":124,"line_end":124,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(current) = &self.current_music {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/audio.rs","byte_start":3895,"byte_end":3902,"line_start":124,"line_end":124,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        if let Some(current) = &self.current_music {","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":"_current","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `current`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/audio.rs:124:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(current) = &self.current_music {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_current`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"lifetime may not live long enough","code":null,"level":"error","spans":[{"file_name":"src/scene.rs","byte_start":3596,"byte_end":3597,"line_start":118,"line_end":118,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"    pub fn get_object_mut(&mut self, id: usize) -> Option<&mut dyn GameObject> {","highlight_start":27,"highlight_end":28}],"label":"let's call the lifetime of this reference `'1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/scene.rs","byte_start":3695,"byte_end":3707,"line_start":119,"line_end":119,"column_start":45,"column_end":57,"is_primary":true,"text":[{"text":"        self.objects.get_mut(&id).map(|obj| obj.as_mut())","highlight_start":45,"highlight_end":57}],"label":"returning this value requires that `'1` must outlive `'static`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to declare that the trait object captures data from argument `self`, you can add an explicit `'_` lifetime bound","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":3647,"byte_end":3647,"line_start":118,"line_end":118,"column_start":78,"column_end":78,"is_primary":true,"text":[{"text":"    pub fn get_object_mut(&mut self, id: usize) -> Option<&mut dyn GameObject> {","highlight_start":78,"highlight_end":78}],"label":null,"suggested_replacement":" + '_","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider adding 'move' keyword before the nested closure","code":null,"level":"help","spans":[{"file_name":"src/scene.rs","byte_start":3689,"byte_end":3689,"line_start":119,"line_end":119,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"        self.objects.get_mut(&id).map(|obj| obj.as_mut())","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":"move ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: lifetime may not live long enough\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scene.rs:119:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_object_mut(&mut self, id: usize) -> Option<&mut dyn GameObject> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mlet's call the lifetime of this reference `'1`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.objects.get_mut(&id).map(|obj| obj.as_mut())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mreturning this value requires that `'1` must outlive `'static`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to declare that the trait object captures data from argument `self`, you can add an explicit `'_` lifetime bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_object_mut(&mut self, id: usize) -> Option<&mut dyn GameObject\u001b[0m\u001b[0m\u001b[38;5;10m + '_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                               \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding 'move' keyword before the nested closure\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        self.objects.get_mut(&id).map(\u001b[0m\u001b[0m\u001b[38;5;10mmove \u001b[0m\u001b[0m|obj| obj.as_mut())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 21 previous errors; 20 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 21 previous errors; 20 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0023, E0046, E0061, E0308, E0599, E0609.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0023, E0046, E0061, E0308, E0599, E0609.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0023`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0023`.\u001b[0m\n"}
